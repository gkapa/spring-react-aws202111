<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.5.5</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.carma</groupId>
	<artifactId>han-ppopen</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>han-ppopen</name>
	<description>Demo project for Spring Boot</description>
	<properties>
		<java.version>11</java.version>
		<!-- yarn 명령어들을 실행할 수 있게 해준다 -->
		<node.version>v14.18.0</node.version>
		<yarn.version>v1.22.17</yarn.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
		</dependency>
		<!-- Spring JPA -->
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-jpa</artifactId>
			<version>2.5.5</version>
		</dependency>
		<!-- JPA 구현체 (Hibernate) -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
		</dependency>
		<!-- @NotBlank 추가용. validation-api는 deprecated됨 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		<!-- modelmapper 추가용 -->
		<dependency>
			<groupId>org.modelmapper</groupId>
			<artifactId>modelmapper</artifactId>
			<version>2.4.2</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<!-- datesource의 HikariConfig, HikariDateSource 추가용 -->
		<!-- 커넥션 풀 라이브러리 설정 : 사용자가 몰리게 되면 커넥션 객체가 많이 필요한데 걔네를 미리 만들어놓고 쓰는것 -->
		<dependency>
			<groupId>com.zaxxer</groupId>
			<artifactId>HikariCP</artifactId>
			<version>5.0.0</version>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
		</dependency>
	</dependencies>
	<profiles>
		<profile>
			<id>dev</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<spring.profiles.active>
					dev
				</spring.profiles.active>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-maven-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>prod</id>
			<build>
				<plugins>
					<plugin>
						<groupId>com.github.eirslett</groupId>
						<artifactId>frontend-maven-plugin</artifactId>
						<version>1.10.4</version>
						<configuration>
							<!-- excution이 실행되는 경로-->
							<workingDirectory>src/js</workingDirectory>
						</configuration>
						<executions>
							<execution>
								<id>install node</id>
								<goals>
									<goal>install-node-and-yarn</goal>
								</goals>
								<configuration>
									<nodeVersion>${node.version}</nodeVersion>
									<yarnVersion>${yarn.version}</yarnVersion>
								</configuration>
							</execution>
							<execution>
								<id>yarn install</id>
								<goals>
									<goal>yarn</goal>
								</goals>
								<phase>generate-resources</phase>
							</execution>
							<execution>
								<id>yarn test</id>
								<goals>
									<goal>yarn</goal>
								</goals>
								<phase>test</phase>
								<configuration>
									<!-- goal에 대한 argument-->
									<arguments>test</arguments>
									<environmentVariables>
										<CI>true</CI>
									</environmentVariables>
								</configuration>
							</execution>
							<execution>
								<id>yarn build</id>
								<goals>
									<goal>yarn</goal>
								</goals>
								<phase>compile</phase>
								<configuration>
									<arguments>build</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
						<executions>
							<execution>
								<id>copy-resources</id>
								<phase>process-classes</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${basedir}/target/classes/static</outputDirectory>
									<resources>
										<resource>
											<directory>src/js/build</directory>
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-maven-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
			<properties>
				<spring.profiles.active>
					prod
				</spring.profiles.active>
			</properties>
		</profile>
<!--		<profile>-->
<!--            &lt;!&ndash; EB에서 지원하는 최대 자바 버전을 확인하고 compatable한 자바 버전으로 컴파일한다 &ndash;&gt;-->
<!--			<id>prod-java8</id>-->
<!--			<build>-->
<!--				<plugins>-->
<!--					<plugin>-->
<!--						<groupId>com.github.eirslett</groupId>-->
<!--						<artifactId>frontend-maven-plugin</artifactId>-->
<!--						<version>1.10.4</version>-->
<!--						<configuration>-->
<!--							&lt;!&ndash; excution이 실행되는 경로&ndash;&gt;-->
<!--							<workingDirectory>src/js</workingDirectory>-->
<!--						</configuration>-->
<!--						<executions>-->
<!--							<execution>-->
<!--								<id>install node</id>-->
<!--								<goals>-->
<!--									<goal>install-node-and-yarn</goal>-->
<!--								</goals>-->
<!--								<configuration>-->
<!--									<nodeVersion>${node.version}</nodeVersion>-->
<!--									<yarnVersion>${yarn.version}</yarnVersion>-->
<!--								</configuration>-->
<!--							</execution>-->
<!--							<execution>-->
<!--								<id>yarn install</id>-->
<!--								<goals>-->
<!--									<goal>yarn</goal>-->
<!--								</goals>-->
<!--								<phase>generate-resources</phase>-->
<!--							</execution>-->
<!--							<execution>-->
<!--								<id>yarn test</id>-->
<!--								<goals>-->
<!--									<goal>yarn</goal>-->
<!--								</goals>-->
<!--								<phase>test</phase>-->
<!--								<configuration>-->
<!--									&lt;!&ndash; goal에 대한 argument&ndash;&gt;-->
<!--									<arguments>test</arguments>-->
<!--									<environmentVariables>-->
<!--										<CI>true</CI>-->
<!--									</environmentVariables>-->
<!--								</configuration>-->
<!--							</execution>-->
<!--							<execution>-->
<!--								<id>yarn build</id>-->
<!--								<goals>-->
<!--									<goal>yarn</goal>-->
<!--								</goals>-->
<!--								<phase>compile</phase>-->
<!--								<configuration>-->
<!--									<arguments>build</arguments>-->
<!--								</configuration>-->
<!--							</execution>-->
<!--						</executions>-->
<!--					</plugin>-->
<!--					<plugin>-->
<!--						<artifactId>maven-resources-plugin</artifactId>-->
<!--						<executions>-->
<!--							<execution>-->
<!--								<id>copy-resources</id>-->
<!--								<phase>process-classes</phase>-->
<!--								<goals>-->
<!--									<goal>copy-resources</goal>-->
<!--								</goals>-->
<!--								<configuration>-->
<!--									<outputDirectory>${basedir}/target/classes/static</outputDirectory>-->
<!--									<resources>-->
<!--										<resource>-->
<!--											<directory>src/js/build</directory>-->
<!--										</resource>-->
<!--									</resources>-->
<!--								</configuration>-->
<!--							</execution>-->
<!--						</executions>-->
<!--					</plugin>-->
<!--&lt;!&ndash;					<plugin>&ndash;&gt;-->
<!--&lt;!&ndash;						<groupId>org.apache.maven.plugins</groupId>&ndash;&gt;-->
<!--&lt;!&ndash;						<artifactId>maven-compiler-plugin</artifactId>&ndash;&gt;-->
<!--&lt;!&ndash;						<configuration>&ndash;&gt;-->
<!--&lt;!&ndash;							<source>1.8</source>&ndash;&gt;-->
<!--&lt;!&ndash;							<target>1.8</target>&ndash;&gt;-->
<!--&lt;!&ndash;						</configuration>&ndash;&gt;-->
<!--&lt;!&ndash;					</plugin>&ndash;&gt;-->
<!--				</plugins>-->
<!--			</build>-->
<!--			<properties>-->
<!--				<spring.profiles.active>-->
<!--					prod-java8-->
<!--				</spring.profiles.active>-->
<!--			</properties>-->
<!--		</profile>-->
	</profiles>
</project>
